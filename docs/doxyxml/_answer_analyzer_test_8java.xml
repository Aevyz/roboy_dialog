<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_answer_analyzer_test_8java" kind="file" language="Java">
    <compoundname>AnswerAnalyzerTest.java</compoundname>
    <innerclass refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_answer_analyzer_test" prot="public">roboy::linguistics::sentenceanalysis::AnswerAnalyzerTest</innerclass>
    <innernamespace refid="namespaceroboy_1_1linguistics_1_1sentenceanalysis">roboy::linguistics::sentenceanalysis</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">package<sp/></highlight><highlight class="normal">roboy.linguistics.sentenceanalysis;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>org.junit.Assert.*;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.ArrayList;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.junit.Test;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceroboy" kindref="compound">roboy</ref>.<ref refid="namespaceroboy_1_1linguistics" kindref="compound">linguistics</ref>.<ref refid="classroboy_1_1linguistics_1_1_linguistics" kindref="compound">Linguistics</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_answer_analyzer_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_answer_analyzer_test" kindref="compound">AnswerAnalyzerTest</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testName()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;frank&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;Frank&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>carl&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;horst&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;My<sp/>name<sp/>is<sp/>Horst&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;bill<sp/>gates&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>Bill<sp/>Gates&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;jack&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;My<sp/>friends<sp/>call<sp/>me<sp/>Jack&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;bill&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;You<sp/>can<sp/>call<sp/>me<sp/>Bill&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;call<sp/>me<sp/>Bob&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(&quot;bob&quot;,<sp/>analyze(&quot;Call<sp/>me<sp/>Bob&quot;));<sp/>//<sp/>Doesn&apos;t<sp/>work<sp/>due<sp/>to<sp/>POS<sp/>tagger<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testOccupation()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;nothing<sp/>really&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;nothing<sp/>really&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;a<sp/>math<sp/>student&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>a<sp/>math<sp/>student&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;a<sp/>professor&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>a<sp/>professor&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;studying<sp/>robotics&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>studying<sp/>robotics&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;study<sp/>biology&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;I<sp/>study<sp/>Biology&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testOrigin()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;netherlands&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;Netherlands&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;india&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>from<sp/>India&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;germany&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;I<sp/>live<sp/>in<sp/>Germany&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;sweden&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;My<sp/>home<sp/>country<sp/>is<sp/>Sweden&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;garching&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;My<sp/>home<sp/>town<sp/>is<sp/>Garching&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;austria&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;I<sp/>was<sp/>born<sp/>in<sp/>Austria&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testHobby()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;robots&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;Robots&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;football&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;My<sp/>hobby<sp/>is<sp/>football&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;fishing<sp/>and<sp/>swimming&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;My<sp/>hobbies<sp/>are<sp/>fishing<sp/>and<sp/>swimming&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;read<sp/>a<sp/>lot&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;I<sp/>read<sp/>a<sp/>lot&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;playing<sp/>cards&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;I<sp/>enjoy<sp/>playing<sp/>cards&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;program&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;I<sp/>like<sp/>to<sp/>program&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;playing<sp/>computer<sp/>games&quot;</highlight><highlight class="normal">,<sp/>analyzePred(</highlight><highlight class="stringliteral">&quot;My<sp/>favorite<sp/>thing<sp/>to<sp/>do<sp/>is<sp/>playing<sp/>computer<sp/>games&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(&quot;basketball&quot;,<sp/>analyzePred(&quot;I<sp/>guess<sp/>I<sp/>like<sp/>basketball&quot;));<sp/>//<sp/>Doesn&apos;t<sp/>yet<sp/>work<sp/>due<sp/>to<sp/>nesting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMovie()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;I<sp/>love<sp/>matrix&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;forest<sp/>gump&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;I<sp/>enjoyed<sp/>forest<sp/>gump&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;wheel<sp/>of<sp/>fortune&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;I<sp/>always<sp/>watch<sp/>wheel<sp/>of<sp/>fortune&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;anything<sp/>from<sp/>quentin<sp/>tarantino&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;anything<sp/>from<sp/>quentin<sp/>tarantino&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;psycho&quot;</highlight><highlight class="normal">,<sp/>analyze(</highlight><highlight class="stringliteral">&quot;psycho&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>assertEquals(&quot;gone<sp/>with<sp/>the<sp/>wind&quot;,<sp/>analyze(&quot;My<sp/>favorite<sp/>movie<sp/>is<sp/>gone<sp/>with<sp/>the<sp/>wind&quot;));<sp/>//<sp/>Doesn&apos;t<sp/>work<sp/>due<sp/>to<sp/>verb<sp/>in<sp/>title</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_simple_tokenizer" kindref="compound">SimpleTokenizer</ref><sp/>tokenizer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_simple_tokenizer" kindref="compound">SimpleTokenizer</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_open_n_l_p_p_p_o_s_tagger" kindref="compound">OpenNLPPPOSTagger</ref><sp/>pos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_open_n_l_p_p_p_o_s_tagger" kindref="compound">OpenNLPPPOSTagger</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_open_n_l_p_parser" kindref="compound">OpenNLPParser</ref><sp/>parser<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_open_n_l_p_parser" kindref="compound">OpenNLPParser</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_answer_analyzer" kindref="compound">AnswerAnalyzer</ref><sp/>answer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_answer_analyzer" kindref="compound">AnswerAnalyzer</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>String<sp/>analyze(String<sp/>sentence){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Analyzer&gt;<sp/>analyzers<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Analyzer&gt;();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyzers.add(tokenizer);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyzers.add(pos);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyzers.add(parser);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyzers.add(answer);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_interpretation" kindref="compound">Interpretation</ref><sp/>interpretation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_interpretation" kindref="compound">Interpretation</ref>(sentence);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="interfaceroboy_1_1linguistics_1_1sentenceanalysis_1_1_analyzer" kindref="compound">Analyzer</ref><sp/>a<sp/>:<sp/>analyzers)<sp/>interpretation<sp/>=<sp/>a.analyze(interpretation);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(String)<sp/>interpretation.getFeature(<ref refid="classroboy_1_1linguistics_1_1_linguistics" kindref="compound">Linguistics</ref>.<ref refid="classroboy_1_1linguistics_1_1_linguistics_1a2398c1301599c3b5f79ab6d3c167376d" kindref="member">OBJ_ANSWER</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>String<sp/>analyzePred(String<sp/>sentence){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Analyzer&gt;<sp/>analyzers<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Analyzer&gt;();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyzers.add(tokenizer);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyzers.add(pos);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyzers.add(parser);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyzers.add(answer);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_interpretation" kindref="compound">Interpretation</ref><sp/>interpretation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classroboy_1_1linguistics_1_1sentenceanalysis_1_1_interpretation" kindref="compound">Interpretation</ref>(sentence);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="interfaceroboy_1_1linguistics_1_1sentenceanalysis_1_1_analyzer" kindref="compound">Analyzer</ref><sp/>a<sp/>:<sp/>analyzers)<sp/>interpretation<sp/>=<sp/>a.analyze(interpretation);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(String)<sp/>interpretation.getFeature(<ref refid="classroboy_1_1linguistics_1_1_linguistics" kindref="compound">Linguistics</ref>.<ref refid="classroboy_1_1linguistics_1_1_linguistics_1a3c881e6e18d76bcf9a0959a4e30aed24" kindref="member">PRED_ANSWER</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/emilka/ros/Roboy/src/roboy_dialog_system/roboy_dialog/src/test/java/roboy/linguistics/sentenceanalysis/AnswerAnalyzerTest.java"/>
  </compounddef>
</doxygen>
