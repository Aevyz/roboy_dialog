package roboy.io;

import java.io.IOException;

import edu.cmu.sphinx.api.Configuration;
import edu.cmu.sphinx.api.LiveSpeechRecognizer;
import org.apache.jena.base.Sys;
import roboy.linguistics.Linguistics;
import roboy.util.Maps;

/**
 * Detects the word 'Roboy' and stores if it was detected in the Linguistics.ROBOYDETECTED
 * attribute field of the resulting Input object.
 */
public class RoboyNameDetectionInput implements InputDevice{

    protected LiveSpeechRecognizer recog_copy;

    public RoboyNameDetectionInput() throws IOException {
        //configure sphinx for 'Roboy' itself and phrases with it
        Configuration configuration = new Configuration();
        System.setProperty("logLevel", "OFF");
        //contains phonetic model - how all words to recognize may be pronounced
        //9462 - name automatically generated by online tool that prepares files for sphinx
        //can be any other, but hard to change everywhere each time
        configuration.setDictionaryPath("src//edu//cmu//sphinx//models//9462//9462.dic");
        configuration.setLanguageModelPath("src//edu//cmu//sphinx//models//9462//9462.lm");
        //native sphinx file - NN for matching words in phrases
        configuration.setAcousticModelPath("src//edu//cmu//sphinx//models//en-us//en-us");
        LiveSpeechRecognizer recognizer = new LiveSpeechRecognizer(configuration);
        recognizer.startRecognition(true);
        //create external 'link' to the object of recognizer to be able to stop it correctly
        //before deletion of the RoboyNameDetectorInput object
        recog_copy = recognizer;
    }

    //function for correct stopping recognition
    public void stopListening(){
        recog_copy.stopRecognition();
        recog_copy = null;
    }

    @Override
    public Input listen() throws InterruptedException, IOException {
        //get a string that was recognized
        String utterance = recog_copy.getResult().getHypothesis();
        if ( utterance.contains("ROBOY") ){
            System.out.println("roboy detected");
            return new Input(null,Maps.stringObjectMap(Linguistics.ROBOYDETECTED,true));
        }
        else {
            return new Input(null);
        }
    }
}
